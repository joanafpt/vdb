{"version":3,"sources":["components/Menu.js","components/Init.js","functions/functions.js","components/Dropdown.js","components/DropdownName.js","components/DropdownQuality.js","components/CompleteSearch.js","routes/Route.js","App.js","serviceWorker.js","index.js"],"names":["Menu","useState","goName","setGoName","goProducer","setGoProducer","goQuality","setGoQuality","goComplete","setGoComplete","className","id","type","onClick","to","Init","repo","setRepo","wines","setWines","veg","setVeg","welcome","setWelcome","showRedirectButton","setShowRedirectButton","enterTheSite","setEnterTheSite","useEffect","setTimeout","CSSTransition","in","appear","timeout","classNames","apiRoot","functions","giveMeTheProducers","callbackProducers","producers","axiosRetry","axios","retries","get","then","response","console","log","data","catch","error","giveMeTheQualities","callbackQualities","qualities","giveMeTheNames","callbackNames","names","searchByProducerWithDropdown","producer","callback","url","encodeURIComponent","searchByNameWithDropdown","name","searchByQualityWithDropdown","quality","completeList","Dropdown","title","items","open","setOpen","selection","setSelection","toggle","setProducers","setCarregaram","renderMsg","setRenderMsg","setInitialNotSend","renderApiResults","setRenderApiResults","backHome","setBackHome","recebi","setRecebi","tabIndex","role","onKeyPress","map","item","key","_id","handleOnClick","prodToSend","length","elem","DropdownName","setNames","nameToSend","setQualities","qualityToSend","CompleteSearch","complete","setComplete","completedata","Routes","basename","exact","path","component","DropdownQuality","App","Route","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mVAsEeA,MAjEf,WAAiB,IAAD,EACgBC,oBAAS,GADzB,mBACLC,EADK,KACGC,EADH,OAEwBF,oBAAS,GAFjC,mBAELG,EAFK,KAEOC,EAFP,OAGsBJ,oBAAS,GAH/B,mBAGLK,EAHK,KAGMC,EAHN,OAIwBN,oBAAS,GAJjC,mBAILO,EAJK,KAIOC,EAJP,KAsBZ,OAEI,yBAAKC,UAAU,mBACX,yBAAKC,GAAG,mBAAR,KAEI,yBAAKD,UAAU,OACX,yBAAKA,UAAU,SAASC,GAAG,iBACvB,4BAAQC,KAAK,SAASD,GAAG,cACrBD,UAAU,mCACVG,QAzBD,WACnBV,GAAU,KAsBM,qBAICD,EAAS,kBAAC,IAAD,CAAUY,GAAG,UAAa,KAEpC,4BAAQF,KAAK,SACTD,GAAG,cACHD,UAAU,mCACVG,QA5BG,WACvBR,GAAc,KAwBE,yBAMCD,EAAa,kBAAC,IAAD,CAAUU,GAAG,cAAiB,KAE5C,4BAAQF,KAAK,SACTD,GAAG,cACHD,UAAU,mCACVG,QAhCE,WACtBN,GAAa,KA4BG,0BAMCD,EAAY,kBAAC,IAAD,CAAUQ,GAAG,eAAkB,KAE5C,4BAAQF,KAAK,SACTD,GAAG,aACHD,UAAU,mCACVG,QApCI,WACxBJ,GAAc,KAgCE,sBAMCD,EAAa,kBAAC,IAAD,CAAUM,GAAG,yBAA4B,U,cCqBhEC,MA7Ef,WAAiB,IAAD,EACYd,oBAAS,GADrB,mBACLe,EADK,KACCC,EADD,OAEchB,oBAAS,GAFvB,mBAELiB,EAFK,KAEEC,EAFF,OAGUlB,oBAAS,GAHnB,mBAGLmB,EAHK,KAGAC,EAHA,OAIkBpB,oBAAS,GAJ3B,mBAILqB,EAJK,KAIIC,EAJJ,OAKwCtB,oBAAS,GALjD,mBAKLuB,EALK,KAKeC,EALf,OAM4BxB,oBAAS,GANrC,mBAMLyB,EANK,KAMSC,EANT,KAwBZ,OAhBAC,qBAAU,WACNC,YAAW,WAAQZ,GAAQ,KAAS,KACpCY,YAAW,WAAQV,GAAS,KAAS,KACrCU,YAAW,WAAQR,GAAO,KAAS,MACnCQ,YAAW,WAAQN,GAAW,KAAS,KACvCM,YAAW,WAAQJ,GAAsB,KAAS,KAClDI,YAAW,WAAQF,GAAgB,KAAS,OAE7C,IASC,yBAAKjB,UAAU,6BACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,cACX,kBAACoB,EAAA,EAAD,CAAeC,GAAIf,EAAMgB,QAAQ,EAAMC,QAAS,IAAKC,WAAW,QAC5D,yBAAKxB,UAAU,kBACVM,EAAO,yBAAKN,UAAU,mBAAf,mBAEJ,OAIZ,kBAACoB,EAAA,EAAD,CAAeC,GAAIb,EAAOc,QAAQ,EAAMC,QAAS,IAAKC,WAAW,QAC7D,yBAAKxB,UAAU,kBACVQ,EAAQ,yBAAKR,UAAU,mBAAf,cAEL,OAGZ,kBAACoB,EAAA,EAAD,CAAeC,GAAIX,EAAKY,QAAQ,EAAMC,QAAS,IAAKC,WAAW,QAC3D,yBAAKxB,UAAU,kBAAf,KAAmCU,EAAM,yBAAKV,UAAU,mBAAf,WAAiD,OAG9F,kBAACoB,EAAA,EAAD,CAAeC,GAAIT,EAASU,QAAQ,EAAMC,QAAS,IAAKC,WAAW,QAC/D,yBAAKxB,UAAU,cAAf,KAA+BY,EAAU,yBAAKZ,UAAU,mBAAf,wBAErC,OAIR,kBAACoB,EAAA,EAAD,CAAeC,GAAIP,EAAoBQ,QAAQ,EAAMC,QAAS,IAAMC,WAAW,QAC3E,yBAAKxB,UAAU,uBACVc,EACG,yBAAKb,GAAG,oBACJ,4BAAQD,UAAU,wBACdG,QAxCzB,WACPc,GAAgB,KAsCY,UAIA,yBAAKhB,GAAG,cAAR,yDAKJ,OAGXe,EAAe,kBAAC,IAAD,CAAUZ,GAAG,UAAa,S,iDC1ExDqB,EAAU,kCAsLDC,EATG,CACdC,mBA3KuB,SAACC,GACxB,IAAMC,EAAY,gDAClBC,IAAWC,IAAO,CAAEC,QAAS,KAC7BD,IAAME,IAAIJ,GACTK,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,KAAM,oBACvBV,GACAA,EAAkBO,EAASG,SAGlCC,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uCAAqCG,GACjDT,IAAME,IAAIJ,GACTK,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,MACjBV,GACAA,EAAkBO,EAASG,aA4JvCG,mBApJuB,SAACC,GACxB,IAAMC,EAAY,gDAClBb,IAAWC,IAAO,CAAEC,QAAS,KAC7BD,IAAME,IAAIU,GACTT,MAAK,SAAAC,GAECO,GACAA,EAAkBP,EAASG,SAIjCC,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uCAAqCG,GACjDT,IAAME,IAAIU,GACTT,MAAK,SAAAC,GAECO,GACCA,EAAkBP,EAASG,aAoIvCM,eA9HmB,SAACC,GACpB,IAAMC,EAAQ,4CACdhB,IAAWC,IAAO,CAAEC,QAAS,KAC7BD,IAAME,IAAIa,GACTZ,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,KAAM,eACxBO,GACCA,EAAcV,EAASG,SAG9BC,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kCAAgCG,GAC5CT,IAAME,IAAIa,GACTZ,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,KAAM,oBACxBO,GACCA,EAAcV,EAASG,aA+GnCS,6BAjFiC,SAACC,EAAUC,GACxC,IACMC,EAAMzB,EAAU,2BAA+B0B,mBAAmBH,GACxElB,IAAWC,IAAO,CAAEC,QAAS,IAC7BD,IAAME,IAAIiB,GACLhB,MAAK,SAAAC,GACEc,GACAA,EAASd,EAASG,SAGzBC,OAAM,SAAAC,GACHJ,QAAQC,IAAI,gDAA8CG,GAC1DT,IAAME,IAAIiB,GACThB,MAAK,SAAAC,GACEc,GACAA,EAASd,EAASG,aAmEtCc,yBA3D6B,SAACC,EAAMJ,GAEpC,IACMC,EAAMzB,EAAU,uBAA0B0B,mBAAmBE,GACnEvB,IAAWC,IAAO,CAAEC,QAAS,IAC7BD,IAAME,IAAIiB,GACLhB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,MACjBW,GACAA,EAASd,EAASG,SAGzBC,OAAM,SAAAC,GACHJ,QAAQC,IAAI,2CAAyCG,GAErDT,IAAME,IAAIiB,GACThB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,MACjBW,GACAA,EAASd,EAASG,aAyClCgB,4BA/BgC,SAACC,EAASN,GAE1C,IACMC,EAAMzB,EAAU,+BAAmC0B,mBAAmBI,GAC5EzB,IAAWC,IAAO,CAAEC,QAAS,IAC7BD,IAAME,IAAIiB,GACLhB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,MACjBW,GACAA,EAASd,EAASG,SAGzBC,OAAM,SAAAC,GACHJ,QAAQC,IAAI,gDAA8CG,GAE1DT,IAAME,IAAIiB,GACThB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,MACjBW,GACAA,EAASd,EAASG,aAalCkB,aA1GiB,SAACP,GAClBnB,IAAWC,IAAO,CAAEC,QAAS,IAC7BD,IAAME,IAAIR,EAAU,kCACfS,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,MACjBW,GACAA,EAASd,EAASG,SAGzBC,OAAM,SAAAC,GACHJ,QAAQC,IAAI,0CAAwCG,GACpDT,IAAME,IAAIR,EAAU,kCACnBS,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,KAAM,oBACxBW,GACCA,EAASd,EAASG,cCkDvBmB,MAxIf,YAA6C,IAAzBC,EAAwB,EAAxBA,MAAwB,KAAjBC,MACCpE,oBAAS,IADO,mBACjCqE,EADiC,KAC3BC,EAD2B,OAENtE,mBAAS,IAFH,mBAEjCuE,EAFiC,KAEtBC,EAFsB,KAGlCC,EAAS,kBAAMH,GAASD,IAHU,EAINrE,qBAJM,mBAIjCsC,EAJiC,KAItBoC,EAJsB,OAMJ1E,oBAAS,GANL,mBAMrB2E,GANqB,aAON3E,mBAAS,IAPH,mBAOjC4E,EAPiC,KAOtBC,EAPsB,OAQI7E,mBAAS,8FARb,mBAQjB8E,GARiB,aASQ9E,mBAAS,IATjB,mBASjC+E,EATiC,KASfC,EATe,OAURhF,oBAAS,GAVD,mBAUjCiF,EAViC,KAUvBC,EAVuB,OAWZlF,oBAAS,GAXG,mBAWjCmF,EAXiC,KAWzBC,EAXyB,KAaxCzD,qBAAU,WACNQ,EAAUC,mBAAmBC,KAC9B,IAEH,IAAMA,EAAoB,SAACU,GACvB2B,EAAa3B,GACbqC,GAAU,IAyBR1B,EAAW,SAACX,GACdF,QAAQC,IAAIC,GACZiC,EAAoB,YAAIjC,KAO5B,OACI,yBAAKtC,UAAU,qBAEV0E,EACG,yBAAK1E,UAAU,cACX,yBAAK4E,SAAU,EACX5E,UAAU,YACV6E,KAAK,SACLC,WAAY,kBAAMd,KAClB7D,QAAS,kBAAM6D,MACf,yBAAKhE,UAAU,mBACX,uBAAGA,UAAU,wBAAwB0D,EAArC,MAGJ,yBAAK1D,UAAU,oBACX,2BAAI4D,EAAO,SAAW,WAI1BA,GACI,wBAAI5D,UAAU,WACT6B,EAAUkD,KAAI,SAAAC,GAAI,OACf,yBAAKhF,UAAU,eACXiF,IAAKD,EAAKE,KACV,4BAAQjF,GAAG,WAAWC,KAAK,SAASC,QAAS,kBAvDjF,SAAuB6E,GACnBjB,EAAa,CAACiB,IAEdnB,GAAQ,GACRO,EAAa,gCAAD,OAA8BY,EAAI,SAAlC,oDAmDuEG,CAAcH,KAC7D,0BAAMhF,UAAU,YAAYgF,EAAI,iBAS5D,yBAAKhF,UAAU,OACX,yBAAKA,UAAU,4BAAf,yBAQP0E,EACG,yBAAK1E,UAAU,OACX,yBAAKA,UAAU,oBACX,4BAAQA,UAAU,uBACdG,QAvExB,WACI,IAAIiF,EACJ,GAAyB,IAArBtB,EAAUuB,OAIV,OAFAjB,EAAa,kDACbC,EAAkB,IAGtBe,EAAatB,EAAU,GAAV,SACbpC,EAAUqB,6BAA6BqC,EAAYnC,GAEnDiB,GAAc,GACdE,EAAa,qEA0DG,UAEA,4BAAQpE,UAAU,uBACdG,QArDX,WACTsE,GAAY,KAmDI,YAKN,KAGN,yBAAKzE,UAAU,iBACVmE,GAGL,6BAAMG,EACF,yBAAKtE,UAAU,YAEPsE,EAAiBS,KAAI,SAAUO,GAC3B,OACI,yBAAKtF,UAAU,eAAeiF,IAAKK,EAAI,KACnC,4BACI,gCAAS,oBADb,KAC4CA,EAAK,kBADjD,KACqE,6BACjE,gCAAS,cAFb,KAEsCA,EAAI,SAF1C,IAEwD,6BACpD,gCAAS,eAHb,KAGuCA,EAAI,UAH3C,IAG0D,mCAO5E,MAGLd,EAAW,kBAAC,IAAD,CAAUpE,GAAG,UAAa,OCFnCmF,MAlIf,YAAiD,IAAzB7B,EAAwB,EAAxBA,MAAwB,KAAjBC,MAEHpE,oBAAS,IAFW,mBAErCqE,EAFqC,KAE/BC,EAF+B,OAGVtE,mBAAS,IAHC,mBAGrCuE,EAHqC,KAG1BC,EAH0B,KAItCC,EAAS,kBAAMH,GAASD,IAJc,EAKlBrE,qBALkB,mBAKrCuD,EALqC,KAK9B0C,EAL8B,OAORjG,oBAAS,GAPD,mBAOzB2E,GAPyB,aAQV3E,mBAAS,IARC,mBAQrC4E,EARqC,KAQ1BC,EAR0B,OASA7E,mBAAS,8FATT,mBASrB8E,GATqB,aAUI9E,mBAAS,IAVb,mBAUrC+E,EAVqC,KAUnBC,EAVmB,OAWZhF,oBAAS,GAXG,mBAWrCiF,EAXqC,KAW3BC,EAX2B,OAYhBlF,oBAAS,GAZO,mBAYrCmF,EAZqC,KAY7BC,EAZ6B,KAc5CzD,qBAAU,WACNQ,EAAUkB,eAAeC,KAC1B,IAEH,IAAMA,EAAgB,SAACP,GACnBkD,EAASlD,GACTqC,GAAU,IAwBR1B,EAAW,SAACX,GACdiC,EAAoB,YAAIjC,KAQ5B,OACI,yBAAKtC,UAAU,qBACV0E,EACG,yBAAK1E,UAAU,cACX,yBAAK4E,SAAU,EAAG5E,UAAU,YAAY6E,KAAK,SAASC,WAAY,kBAAMd,KAAe7D,QAAS,kBAAM6D,MAClG,yBAAKhE,UAAU,mBACX,uBAAGA,UAAU,wBAAwB0D,EAArC,MAGJ,yBAAK1D,UAAU,oBACX,2BAAI4D,EAAO,SAAW,WAI1BA,GACI,wBAAI5D,UAAU,WACT8C,EAAMiC,KAAI,SAAAC,GAAI,OACX,yBAAKhF,UAAU,eAAeiF,IAAKD,EAAKE,KACpC,4BAAQjF,GAAG,WAAWC,KAAK,SAASC,QAAS,kBAhD3D,SAAC6E,GACnBjB,EAAa,CAACiB,IACd5C,QAAQC,IAAI2C,EAAK,kBAAmB,SACpCnB,GAAQ,GACRO,EAAa,6BAAD,OACkBY,EAAK,kBADvB,oDA4CuEG,CAAcH,KAC7D,0BAAMhF,UAAU,YAAYgF,EAAK,0BAS7D,yBAAKhF,UAAU,OACX,yBAAKA,UAAU,4BAAf,yBAMP0E,EACG,yBAAK1E,UAAU,OACX,yBAAKA,UAAU,oBACX,4BAAQA,UAAU,uBACdG,QA7DI,WACxB,IAAIsF,EACJ,GAAyB,IAArB3B,EAAUuB,OAGV,OAFAjB,EAAa,+CACbC,EAAkB,IAGtBoB,EAAa3B,EAAU,GAAG,kBAC1BpC,EAAU0B,yBAAyBqC,EAAYxC,GAC/CiB,GAAc,GACdE,EAAa,qEAkDG,UAEA,4BAAQpE,UAAU,uBACdG,QA9CX,WACTsE,GAAY,KA4CI,YAKN,KAGN,yBAAKzE,UAAU,iBACVmE,GAGL,6BAAMG,EACF,yBAAKtE,UAAU,YAEPsE,EAAiBS,KAAI,SAAUO,GAC3B,OACI,yBAAKtF,UAAU,eAAeiF,IAAKK,EAAI,KAEnC,4BACI,gCAAS,oBADb,KAC4CA,EAAK,kBADjD,KACqE,6BACjE,gCAAS,cAFb,KAEsCA,EAAI,SAF1C,IAEwD,6BACpD,gCAAS,eAHb,KAGuCA,EAAI,UAH3C,IAG0D,mCAQ9E,MAGHd,EAAW,kBAAC,IAAD,CAAUpE,GAAG,UAAa,OCcnCmF,MA5If,YAAiD,IAAzB7B,EAAwB,EAAxBA,MAAwB,KAAjBC,MAEHpE,oBAAS,IAFW,mBAErCqE,EAFqC,KAE/BC,EAF+B,OAGVtE,mBAAS,IAHC,mBAGrCuE,EAHqC,KAG1BC,EAH0B,KAItCC,EAAS,kBAAMH,GAASD,IAJc,EAKVrE,qBALU,mBAKrCoD,EALqC,KAK1B+C,EAL0B,OAORnG,oBAAS,GAPD,mBAOzB2E,GAPyB,aAQV3E,mBAAS,IARC,mBAQrC4E,EARqC,KAQ1BC,EAR0B,OASA7E,mBAAS,8FATT,mBASrB8E,GATqB,aAUI9E,mBAAS,IAVb,mBAUrC+E,EAVqC,KAUnBC,EAVmB,OAWZhF,oBAAS,GAXG,mBAWrCiF,EAXqC,KAW3BC,EAX2B,OAYhBlF,oBAAS,GAZO,mBAYrCmF,EAZqC,KAY7BC,EAZ6B,KAe5CzD,qBAAU,WACNQ,EAAUe,mBAAmBC,KAE9B,IAGH,IAAMA,EAAoB,SAACJ,GACvBF,QAAQC,IAAIC,EAAM,qBAClBoD,EAAapD,GACbqC,GAAU,IA0BR1B,EAAW,SAACX,GAEdiC,EAAoB,YAAIjC,KAQ5B,OACI,yBAAKtC,UAAU,qBACV0E,EACG,yBAAK1E,UAAU,cACX,yBAAK4E,SAAU,EAAG5E,UAAU,YAAY6E,KAAK,SAASC,WAAY,kBAAMd,KAAe7D,QAAS,kBAAM6D,MAClG,yBAAKhE,UAAU,mBACX,uBAAGA,UAAU,wBAAwB0D,EAArC,MAEJ,yBAAK1D,UAAU,oBACX,2BAAI4D,EAAO,SAAW,WAI1BA,GACI,wBAAI5D,UAAU,WAET2C,EAAUoC,KAAI,SAAAC,GAAI,OACf,yBAAKhF,UAAU,eAAeiF,IAAKD,EAAKE,KACpC,4BAAQjF,GAAG,WAAWC,KAAK,SAASC,QAAS,kBAnD3D,SAAC6E,GACnBjB,EAAa,CAACiB,IACd5C,QAAQC,IAAI2C,EAAI,UAAe,SAC/BnB,GAAQ,GACRO,EAAa,iCAAD,OACsBY,EAAI,UAD1B,oDA+CuEG,CAAcH,KAC7D,0BAAMhF,UAAU,YAAYgF,EAAI,kBAS5D,yBAAKhF,UAAU,OACX,yBAAKA,UAAU,4BAAf,yBAOP0E,EACG,yBAAK1E,UAAU,OACX,yBAAKA,UAAU,oBACX,4BAAQA,UAAU,uBACdG,QAjEI,WACxB,IAAIwF,EACJ,GAAyB,IAArB7B,EAAUuB,OAIV,OAHAjD,QAAQC,IAAI,gCACZ+B,EAAa,oDACbC,EAAkB,IAGtBsB,EAAgB7B,EAAU,GAAV,UAChB1B,QAAQC,IAAIsD,EAAe,aAC3BjE,EAAU4B,4BAA4BqC,EAAe1C,GACrDiB,GAAc,GACdE,EAAa,qEAoDG,UAEA,4BAAQpE,UAAU,uBACdG,QA/CX,WACTsE,GAAY,KA6CI,YAKN,KAGN,yBAAKzE,UAAU,iBACVmE,GAGL,6BAAMG,EACF,yBAAKtE,UAAU,YAEPsE,EAAiBS,KAAI,SAAUO,GAE3B,OACI,yBAAKtF,UAAU,eAAeiF,IAAKK,EAAI,KAEnC,4BACI,gCAAS,oBADb,KAC4CA,EAAK,kBADjD,KACqE,6BACjE,gCAAS,cAFb,KAEsCA,EAAI,SAF1C,IAEwD,6BACpD,gCAAS,eAHb,KAGuCA,EAAI,UAH3C,IAG0D,mCAQ9E,MAGHd,EAAW,kBAAC,IAAD,CAAUpE,GAAG,UAAa,OCvEnCwF,G,MAhEQ,WAAO,IAAD,EACOrG,qBADP,mBAClBsG,EADkB,KACRC,EADQ,OAEOvG,oBAAS,GAFhB,mBAElBiF,EAFkB,KAERC,EAFQ,OAGGlF,oBAAS,GAHZ,mBAGlBmF,EAHkB,KAGVC,EAHU,KAKzBzD,qBAAU,WACNQ,EAAU8B,aAAaP,KACxB,IAEH,IAAMA,EAAW,SAAC8C,GACdD,EAAYC,GACZpB,GAAU,IAOd,OACI,yBAAK3E,UAAU,YACX,yBAAKA,UAAU,UAEV0E,EACG,6BAGQmB,EAASd,KAAI,SAAUO,GACnB,OACI,yBAAKtF,UAAU,eAAeiF,IAAKK,EAAI,KAEnC,4BACI,gCAAS,oBADb,KAC4CA,EAAK,kBADjD,KACqE,6BACjE,gCAAS,cAFb,KAEsCA,EAAI,SAF1C,IAEwD,6BACpD,gCAAS,eAHb,KAGuCA,EAAI,UAH3C,IAG0D,mCAS9E,yBAAKrF,GAAG,iBAAR,yBAKPyE,EACG,yBAAK1E,UAAU,eACX,4BAAQE,KAAK,SACTF,UAAU,iCACVG,QArCP,WACTsE,GAAY,KAkCA,YAOJ,KAGHD,EAAW,kBAAC,IAAD,CAAUpE,GAAG,UAAa,QCzCnC4F,EAdA,WAEX,OACI,kBAAC,IAAD,CAAYC,SAAS,KACjB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/F,IACjC,kBAAC,IAAD,CAAO8F,KAAK,QAAQC,UAAW9G,IAC/B,kBAAC,IAAD,CAAO6G,KAAM,YAAYC,UAAW3C,IACpC,kBAAC,IAAD,CAAO0C,KAAM,QAAQC,UAAWb,IAChC,kBAAC,IAAD,CAAOY,KAAM,aAAaC,UAAWC,IACrC,kBAAC,IAAD,CAAOF,KAAM,uBAAuBC,UAAWR,MCC5CU,MAdf,WAEE,OACE,yBAAKtG,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACX,kBAACuG,EAAD,WCAMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjF,MAAK,SAAAkF,GACjCA,EAAaC,kB","file":"static/js/main.a221d69d.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport './Menu.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Menu() {\r\n    const [goName, setGoName] = useState(false);\r\n    const [goProducer, setGoProducer] = useState(false);\r\n    const [goQuality, setGoQuality] = useState(false);\r\n    const [goComplete, setGoComplete] = useState(false);\r\n\r\n    const goToNameSearch = () => {\r\n        setGoName(true);\r\n    }\r\n\r\n    const goToProducerSearch = () => {\r\n        setGoProducer(true);\r\n    }\r\n\r\n    const goToQualitySearch = () => {\r\n        setGoQuality(true);\r\n    }\r\n\r\n    const goToCompleteResults = () => {\r\n        setGoComplete(true);\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"container-teste\">\r\n            <div id=\"envolvente-menu\">  {/*ORANGE Div */}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\" id=\"buttons-stack\">\r\n                        <button type=\"button\" id=\"name-button\"\r\n                            className=\"btn btn-primary btn-lg btn-block\"\r\n                            onClick={goToNameSearch}\r\n                        >Pesquisa por Nome</button>\r\n                        {goName ? <Redirect to=\"/nome\" /> : null}\r\n\r\n                        <button type=\"button\"\r\n                            id=\"prod-button\"\r\n                            className=\"btn btn-primary btn-lg btn-block\"\r\n                            onClick={goToProducerSearch}\r\n                        >Pesquisa por Produtor\r\n                        </button>\r\n                        {goProducer ? <Redirect to=\"/produtor\" /> : null}\r\n\r\n                        <button type=\"button\"\r\n                            id=\"qual-button\"\r\n                            className=\"btn btn-primary btn-lg btn-block\"\r\n                            onClick={goToQualitySearch}\r\n                        >Pesquisa por Qualidade\r\n                         </button>\r\n                        {goQuality ? <Redirect to=\"/qualidade\" /> : null}\r\n\r\n                        <button type=\"button\"\r\n                            id=\"all-button\"\r\n                            className=\"btn btn-primary btn-lg btn-block\"\r\n                            onClick={goToCompleteResults}\r\n                        >Pesquisa completa </button>\r\n\r\n                        {goComplete ? <Redirect to=\"/todos-os-resultados\" /> : null}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Menu;\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport './Init.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nfunction Init() {\r\n    const [repo, setRepo] = useState(false);\r\n    const [wines, setWines] = useState(false);\r\n    const [veg, setVeg] = useState(false);\r\n    const [welcome, setWelcome] = useState(false);\r\n    const [showRedirectButton, setShowRedirectButton] = useState(false);\r\n    const [enterTheSite, setEnterTheSite] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => { setRepo(true) }, 500);\r\n        setTimeout(() => { setWines(true) }, 1000);\r\n        setTimeout(() => { setVeg(true) }, 1500);\r\n        setTimeout(() => { setWelcome(true) }, 2000);\r\n        setTimeout(() => { setShowRedirectButton(true) }, 3000);\r\n        setTimeout(() => { setEnterTheSite(true) }, 5000)\r\n\r\n    }, []);\r\n\r\n\r\n    const go = () => {\r\n        setEnterTheSite(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container vertical-center\">\r\n            <div className=\"col-md\">\r\n                <div className=\"envolvente\">\r\n                    <CSSTransition in={repo} appear={true} timeout={500} classNames=\"fade\">\r\n                        <div className=\"text-to-render\">\r\n                            {repo ? <div className=\"transition-text\">Repositório </div>\r\n                                :\r\n                                null}\r\n                        </div>\r\n                    </CSSTransition>\r\n\r\n                    <CSSTransition in={wines} appear={true} timeout={500} classNames=\"fade\">\r\n                        <div className=\"text-to-render\">\r\n                            {wines ? <div className=\"transition-text\">de vinhos </div>\r\n                                :\r\n                                null}</div>\r\n                    </CSSTransition>\r\n\r\n                    <CSSTransition in={veg} appear={true} timeout={500} classNames=\"fade\">\r\n                        <div className=\"text-to-render\">  {veg ? <div className=\"transition-text\"> Vegan </div> : null}</div>\r\n                    </CSSTransition>\r\n\r\n                    <CSSTransition in={welcome} appear={true} timeout={500} classNames=\"fade\">\r\n                        <div className=\"#wilkommen\">  {welcome ? <div className=\"transition-text\"> Seja bem-vindo/a!  </div>\r\n                            :\r\n                            null}\r\n                        </div>\r\n                    </CSSTransition>\r\n\r\n                    <CSSTransition in={showRedirectButton} appear={true} timeout={1000} classNames=\"fade\">\r\n                        <div className=\"#show-me-the-button\">\r\n                            {showRedirectButton ?\r\n                                <div id=\"redirect-not-aut\">\r\n                                    <button className=\"btn btn-default enter\"\r\n                                        onClick={go}\r\n\r\n                                    >Entrar</button>\r\n                                    <div id=\"text-redir\">\r\n                                        Se não for diretamente redirecionado, clique aqui\r\n                                </div>\r\n                                </div>\r\n                                :\r\n                                null}\r\n                        </div>\r\n                    </CSSTransition>\r\n                    {enterTheSite ? <Redirect to=\"/menu\" /> : null}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Init;","import axios from 'axios';\r\nimport axiosRetry from 'axios-retry';\r\nconst apiRoot = \"https://bdv.glitch.me/api/wines\";\r\n\r\n\r\nconst giveMeTheProducers = (callbackProducers) => {\r\n    const producers = 'https://bdv.glitch.me/api/wines/get-producers';\r\n    axiosRetry(axios, { retries: 10});\r\n    axios.get(producers)\r\n    .then(response => {\r\n        console.log(response.data, ' produtores aqui');\r\n        if (callbackProducers) {\r\n            callbackProducers(response.data);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.log('o erro ao obter os produtores é: ', error);  \r\n        axios.get(producers)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            if (callbackProducers) {\r\n                callbackProducers(response.data);\r\n            }\r\n        })      \r\n    })\r\n\r\n\r\n}\r\n\r\nconst giveMeTheQualities = (callbackQualities) => {\r\n    const qualities = 'https://bdv.glitch.me/api/wines/get-qualities';\r\n    axiosRetry(axios, { retries: 10});\r\n    axios.get(qualities)\r\n    .then(response => {\r\n      // console.log(response.data, ' qualidades aqui');\r\n        if(callbackQualities){\r\n           callbackQualities(response.data);\r\n           \r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.log('o erro ao obter os produtores é: ', error);  \r\n        axios.get(qualities)\r\n        .then(response => {\r\n         //   console.log(response.data, ' qualidades aqui');\r\n            if(callbackQualities){\r\n                callbackQualities(response.data);\r\n            }\r\n        })      \r\n    })\r\n}\r\n\r\nconst giveMeTheNames = (callbackNames) => {\r\n    const names = 'https://bdv.glitch.me/api/wines/get-names';\r\n    axiosRetry(axios, { retries: 10});\r\n    axios.get(names)\r\n    .then(response => {\r\n        console.log(response.data, ' nomes aqui');\r\n        if(callbackNames){\r\n            callbackNames(response.data);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.log('o erro ao obter os nomes é: ', error);  \r\n        axios.get(names)\r\n        .then(response => {\r\n            console.log(response.data, ' qualidades aqui');\r\n            if(callbackNames){\r\n                callbackNames(response.data);\r\n            }\r\n        })      \r\n    })\r\n}\r\n\r\n\r\n\r\nconst completeList = (callback) => {\r\n    axiosRetry(axios, { retries: 6 });\r\n    axios.get(apiRoot + '/get-full-list?fulllist=Enviar')\r\n        .then(response => {\r\n            console.log(response.data);\r\n            if (callback) {\r\n                callback(response.data);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('o erro ao obter a lista COMPLETA é: ', error);     \r\n            axios.get(apiRoot + '/get-full-list?fulllist=Enviar')\r\n            .then(response => {\r\n                console.log(response.data, ' qualidades aqui');\r\n                if(callback){\r\n                    callback(response.data);\r\n                }\r\n            })    \r\n        })\r\n}\r\n\r\n\r\nconst searchByProducerWithDropdown = (producer, callback) => {\r\n        const query = '?prod=';\r\n        const url = apiRoot + '/list-by-producer/' + query + encodeURIComponent(producer);\r\n        axiosRetry(axios, { retries: 6 });\r\n        axios.get(url)\r\n            .then(response => {          \r\n                if (callback) {\r\n                    callback(response.data);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('o erro ao obter a lista por PRODUTORES é: ', error);   \r\n                axios.get(url)\r\n                .then(response => {          \r\n                    if (callback) {\r\n                        callback(response.data);\r\n                    }\r\n                })   \r\n            })\r\n        \r\n}\r\n\r\n\r\nconst searchByNameWithDropdown = (name, callback) => {\r\n  \r\n    const query = '?wname=';\r\n    const url = apiRoot + '/find-a-wine/' + query + encodeURIComponent(name);\r\n    axiosRetry(axios, { retries: 6 });\r\n    axios.get(url)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            if (callback) {\r\n                callback(response.data);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('o erro ao obter a lista por NOMES é: ', error);   \r\n            //repeats call\r\n            axios.get(url)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                if (callback) {\r\n                    callback(response.data);\r\n                }\r\n            })\r\n\r\n        })\r\n    \r\n\r\n}\r\n\r\n\r\nconst searchByQualityWithDropdown = (quality, callback) => {\r\n  \r\n    const query = '?qual=';\r\n    const url = apiRoot + '/list-by-type-of-wine/' + query + encodeURIComponent(quality);\r\n    axiosRetry(axios, { retries: 6 });\r\n    axios.get(url)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            if (callback) {\r\n                callback(response.data);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('o erro ao obter a lista por QUALIDADES é: ', error);   \r\n            //repeats call\r\n            axios.get(url)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                if (callback) {\r\n                    callback(response.data);\r\n                }\r\n            })\r\n        })  \r\n}\r\n\r\nconst functions = { \r\n    giveMeTheProducers: giveMeTheProducers,\r\n    giveMeTheQualities:giveMeTheQualities,\r\n    giveMeTheNames: giveMeTheNames,\r\n    searchByProducerWithDropdown: searchByProducerWithDropdown,\r\n    searchByNameWithDropdown: searchByNameWithDropdown,\r\n    searchByQualityWithDropdown:searchByQualityWithDropdown,\r\n    completeList: completeList, \r\n}\r\nexport default functions;","import React, { useState, useEffect } from 'react';\r\nimport './Dropdown.css';\r\nimport functions from '../functions/functions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Dropdown({ title, items = false }) {\r\n    const [open, setOpen] = useState(false); //changes if dd is open /closed\r\n    const [selection, setSelection] = useState([]); //willl hold selected items\r\n    const toggle = () => setOpen(!open); //\r\n    const [producers, setProducers] = useState();\r\n    //const [arrayIsLoaded, setArrayIsLoaded] = useState(false);\r\n    const [carregaram, setCarregaram] = useState(false);\r\n    const [renderMsg, setRenderMsg] = useState('');\r\n    const [initialNotSend, setInitialNotSend] = useState('Ainda não enviou pedido para nenhum produtor. Selecione na lista o Produtor pretendido.');\r\n    const [renderApiResults, setRenderApiResults] = useState([]);\r\n    const [backHome, setBackHome] = useState(false);\r\n    const [recebi, setRecebi] = useState(false);\r\n\r\n    useEffect(() => {\r\n        functions.giveMeTheProducers(callbackProducers);\r\n    }, []);\r\n\r\n    const callbackProducers = (data) => {\r\n        setProducers(data);\r\n        setRecebi(true);\r\n    }\r\n\r\n    function handleOnClick(item) { // not including multiselection possibility\r\n        setSelection([item]);\r\n        // console.log(item['Produtor'], ' item');\r\n        setOpen(false);\r\n        setRenderMsg(`O Produtor selecionado é: ${item['Produtor']}. Para mais informações, clique em Enviar`)\r\n    }\r\n\r\n    function alguemClicouNoBotao() {\r\n        var prodToSend;\r\n        if (selection.length === 0) {\r\n            // console.log('Não selecionou nada ainda');\r\n            setRenderMsg('Por favor selecione um Produtor na lista.');\r\n            setInitialNotSend('');\r\n            return;\r\n        }\r\n        prodToSend = selection[0]['Produtor'];\r\n        functions.searchByProducerWithDropdown(prodToSend, callback);\r\n        //console.log(JSON.stringify(selection));\r\n        setCarregaram(true);\r\n        setRenderMsg('Os dados referentes à sua seleção são os seguintes:');\r\n    }\r\n\r\n    const callback = (data) => {\r\n        console.log(data);\r\n        setRenderApiResults([...data]);\r\n    }\r\n\r\n    const back = () => {\r\n        setBackHome(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"contentor-de-fora\">\r\n\r\n            {recebi ? /*dropdown only renders if already received API response*/\r\n                <div className=\"dd-wrapper\">\r\n                    <div tabIndex={0}\r\n                        className=\"dd-header\"\r\n                        role=\"button\"\r\n                        onKeyPress={() => toggle(!open)}\r\n                        onClick={() => toggle(!open)} >\r\n                        <div className=\"dd-header-title\">\r\n                            <p className=\"dd-header-title-bold\">{title} </p>\r\n                        </div>\r\n\r\n                        <div className=\"dd-header-action\">\r\n                            <p>{open ? 'Fechar' : 'Abrir'}</p>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        open && (\r\n                            <ul className=\"dd-list\">\r\n                                {producers.map(item => (\r\n                                    <div className=\"dd-list-item\"\r\n                                        key={item._id}>\r\n                                        <button id=\"list-api\" type=\"button\" onClick={() => handleOnClick(item)}>\r\n                                            <span className=\"category\">{item['Produtor']}</span>\r\n                                        </button>\r\n                                    </div>\r\n                                ))}\r\n                            </ul>\r\n                        )\r\n                    }\r\n                </div>\r\n                :\r\n                <div className=\"out\">\r\n                    <div className=\"please-wait-loading-data\">\r\n                        Por favor aguarde...\r\n                </div>\r\n                </div>\r\n\r\n            }\r\n\r\n\r\n            {recebi ? /*button only renders if we already have API response*/\r\n                <div className=\"row\">\r\n                    <div className=\"button-container\">\r\n                        <button className=\"btn btn-default send\"\r\n                            onClick={alguemClicouNoBotao}>Enviar</button>\r\n                        <button className=\"btn btn-default send\"\r\n                            onClick={back}\r\n                        >Voltar</button>\r\n                    </div>\r\n                </div>\r\n                : null\r\n            }\r\n\r\n            <div className=\"info-selected\">\r\n                {renderMsg}\r\n            </div>\r\n\r\n            <div>{renderApiResults ?\r\n                <div className=\"flatlist\">\r\n                    {\r\n                        renderApiResults.map(function (elem) {\r\n                            return (\r\n                                <div className=\"text-results\" key={elem['_id']}>\r\n                                    <ul>\r\n                                        <strong>{'Vinho ou Marca: '}</strong>  {elem['Vinho ou Marca']}  <br />\r\n                                        <strong>{'Produtor: '}</strong>  {elem['Produtor']} <br />\r\n                                        <strong>{'Qualidade: '}</strong>  {elem['Qualidade']} <br />\r\n                                    </ul>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                : null\r\n            }</div>\r\n\r\n            {backHome ? <Redirect to=\"/menu\" /> : null}\r\n        </div>\r\n    )\r\n}\r\nexport default Dropdown;","import React, { useState, useEffect } from 'react';\r\nimport './Dropdown.css';\r\nimport functions from '../functions/functions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction DropdownName({ title, items = false }) {\r\n\r\n    const [open, setOpen] = useState(false); //changes if dd is open /closed\r\n    const [selection, setSelection] = useState([]); //willl hold selected items\r\n    const toggle = () => setOpen(!open);\r\n    const [names, setNames] = useState();\r\n    //const [arrayIsLoaded, setArrayIsLoaded] = useState(false); //equiv ao recebi, setrecebi\r\n    const [carregaram, setCarregaram] = useState(false);\r\n    const [renderMsg, setRenderMsg] = useState('');\r\n    const [initialNotSend, setInitialNotSend] = useState('Ainda não enviou pedido para nenhum produtor. Selecione na lista o Produtor pretendido.');\r\n    const [renderApiResults, setRenderApiResults] = useState([]);\r\n    const [backHome, setBackHome] = useState(false);\r\n    const [recebi, setRecebi] = useState(false);\r\n\r\n    useEffect(() => {\r\n        functions.giveMeTheNames(callbackNames);\r\n    }, []);\r\n\r\n    const callbackNames = (data) => {\r\n        setNames(data);\r\n        setRecebi(true);//alterar nomenclatura para arrayIsLoaded\r\n    }\r\n\r\n    const handleOnClick = (item) => { // n vamos incluir multiselection\r\n        setSelection([item]);\r\n        console.log(item['Vinho ou Marca'], ' item');\r\n        setOpen(false);\r\n        setRenderMsg(\r\n            `O Vinho selecionado é: ${item['Vinho ou Marca']}. Para mais informações, clique em Enviar`)\r\n    }\r\n\r\n    const alguemClicouNoBotao = () => {\r\n        var nameToSend;\r\n        if (selection.length === 0) {\r\n            setRenderMsg('Por favor selecione um Vinho na lista.')\r\n            setInitialNotSend('');\r\n            return;\r\n        }\r\n        nameToSend = selection[0]['Vinho ou Marca'];\r\n        functions.searchByNameWithDropdown(nameToSend, callback);\r\n        setCarregaram(true);\r\n        setRenderMsg('Os dados referentes à sua seleção são os seguintes:');  //<------------------------------------------\r\n    }\r\n\r\n    const callback = (data) => {\r\n        setRenderApiResults([...data]);\r\n    }\r\n\r\n    const back = () => {\r\n        setBackHome(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"contentor-de-fora\">\r\n            {recebi ?\r\n                <div className=\"dd-wrapper\">\r\n                    <div tabIndex={0} className=\"dd-header\" role=\"button\" onKeyPress={() => toggle(!open)} onClick={() => toggle(!open)} >\r\n                        <div className=\"dd-header-title\">\r\n                            <p className=\"dd-header-title-bold\">{title} </p>\r\n                        </div>\r\n\r\n                        <div className=\"dd-header-action\">\r\n                            <p>{open ? 'Fechar' : 'Abrir'}</p>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        open && (\r\n                            <ul className=\"dd-list\">\r\n                                {names.map(item => (\r\n                                    <div className=\"dd-list-item\" key={item._id}>\r\n                                        <button id=\"list-api\" type=\"button\" onClick={() => handleOnClick(item)}>\r\n                                            <span className=\"category\">{item['Vinho ou Marca']}</span>\r\n                                        </button>\r\n                                    </div>\r\n                                ))}\r\n                            </ul>\r\n                        )\r\n                    }\r\n                </div>\r\n                :\r\n                <div className=\"out\">\r\n                    <div className=\"please-wait-loading-data\">\r\n                        Por favor aguarde...\r\n                </div>\r\n                </div>\r\n            }\r\n\r\n            {recebi ?\r\n                <div className=\"row\">\r\n                    <div className=\"button-container\">\r\n                        <button className=\"btn btn-default send\"\r\n                            onClick={alguemClicouNoBotao}>Enviar</button>\r\n                        <button className=\"btn btn-default send\"\r\n                            onClick={back}\r\n                        >Voltar</button>\r\n                    </div>\r\n                </div>\r\n                : null\r\n            }\r\n\r\n            <div className=\"info-selected\">\r\n                {renderMsg}\r\n            </div>\r\n\r\n            <div>{renderApiResults ?\r\n                <div className=\"flatlist\">\r\n                    {\r\n                        renderApiResults.map(function (elem) {\r\n                            return (\r\n                                <div className=\"text-results\" key={elem['_id']}>\r\n\r\n                                    <ul>\r\n                                        <strong>{'Vinho ou Marca: '}</strong>  {elem['Vinho ou Marca']}  <br />\r\n                                        <strong>{'Produtor: '}</strong>  {elem['Produtor']} <br />\r\n                                        <strong>{'Qualidade: '}</strong>  {elem['Qualidade']} <br />\r\n                                    </ul>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                :\r\n                null\r\n\r\n            }</div>\r\n            {backHome ? <Redirect to=\"/menu\" /> : null}\r\n        </div>\r\n    )\r\n}\r\nexport default DropdownName;","import React, { useState, useEffect } from 'react';\r\nimport './Dropdown.css';\r\nimport functions from '../functions/functions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction DropdownName({ title, items = false }) {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [selection, setSelection] = useState([]);\r\n    const toggle = () => setOpen(!open);\r\n    const [qualities, setQualities] = useState();\r\n    //const [arrayIsLoaded, setArrayIsLoaded] = useState(false); //equiv ao recebi, setrecebi\r\n    const [carregaram, setCarregaram] = useState(false);\r\n    const [renderMsg, setRenderMsg] = useState('');\r\n    const [initialNotSend, setInitialNotSend] = useState('Ainda não enviou pedido para nenhum produtor. Selecione na lista o Produtor pretendido.');\r\n    const [renderApiResults, setRenderApiResults] = useState([]);\r\n    const [backHome, setBackHome] = useState(false);\r\n    const [recebi, setRecebi] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        functions.giveMeTheQualities(callbackQualities);\r\n\r\n    }, []);\r\n\r\n\r\n    const callbackQualities = (data) => {\r\n        console.log(data, ' data no callback');\r\n        setQualities(data);\r\n        setRecebi(true);\r\n    }\r\n\r\n    const handleOnClick = (item) => {\r\n        setSelection([item]);\r\n        console.log(item['Qualidade'], ' item');\r\n        setOpen(false);\r\n        setRenderMsg(\r\n            `A Qualidade selecionada é: ${item['Qualidade']}. Para mais informações, clique em Enviar`);\r\n    }\r\n\r\n    const alguemClicouNoBotao = () => {\r\n        var qualityToSend;\r\n        if (selection.length === 0) {\r\n            console.log('Não selecionou nada ainda');\r\n            setRenderMsg('Por favor selecione uma Qualidade na lista.')\r\n            setInitialNotSend('');\r\n            return;\r\n        }\r\n        qualityToSend = selection[0]['Qualidade'];\r\n        console.log(qualityToSend, ' qts aqui')\r\n        functions.searchByQualityWithDropdown(qualityToSend, callback);\r\n        setCarregaram(true);\r\n        setRenderMsg('Os dados referentes à sua seleção são os seguintes:');\r\n    }\r\n\r\n    const callback = (data) => {\r\n        //  console.log(data, ' data sff');\r\n        setRenderApiResults([...data]);\r\n    }\r\n\r\n    const back = () => {\r\n        setBackHome(true);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"contentor-de-fora\">\r\n            {recebi ?\r\n                <div className=\"dd-wrapper\">\r\n                    <div tabIndex={0} className=\"dd-header\" role=\"button\" onKeyPress={() => toggle(!open)} onClick={() => toggle(!open)} >\r\n                        <div className=\"dd-header-title\">\r\n                            <p className=\"dd-header-title-bold\">{title} </p>\r\n                        </div>\r\n                        <div className=\"dd-header-action\">\r\n                            <p>{open ? 'Fechar' : 'Abrir'}</p>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        open && (\r\n                            <ul className=\"dd-list\">\r\n\r\n                                {qualities.map(item => (\r\n                                    <div className=\"dd-list-item\" key={item._id}>\r\n                                        <button id=\"list-api\" type=\"button\" onClick={() => handleOnClick(item)}>\r\n                                            <span className=\"category\">{item['Qualidade']}</span>\r\n                                        </button>\r\n                                    </div>\r\n                                ))}\r\n                            </ul>\r\n                        )\r\n                    }\r\n                </div>\r\n                :\r\n                <div className=\"out\">\r\n                    <div className=\"please-wait-loading-data\">\r\n                        Por favor aguarde...\r\n                </div>\r\n                </div>\r\n\r\n            }\r\n\r\n            {recebi ?\r\n                <div className=\"row\">\r\n                    <div className=\"button-container\">\r\n                        <button className=\"btn btn-default send\"\r\n                            onClick={alguemClicouNoBotao}>Enviar</button>\r\n                        <button className=\"btn btn-default send\"\r\n                            onClick={back}\r\n                        >Voltar</button>\r\n                    </div>\r\n                </div>\r\n                : null\r\n            }\r\n\r\n            <div className=\"info-selected\">\r\n                {renderMsg}\r\n            </div>\r\n\r\n            <div>{renderApiResults ?\r\n                <div className=\"flatlist\">\r\n                    {\r\n                        renderApiResults.map(function (elem) {\r\n\r\n                            return (\r\n                                <div className=\"text-results\" key={elem['_id']}>\r\n\r\n                                    <ul>\r\n                                        <strong>{'Vinho ou Marca: '}</strong>  {elem['Vinho ou Marca']}  <br />\r\n                                        <strong>{'Produtor: '}</strong>  {elem['Produtor']} <br />\r\n                                        <strong>{'Qualidade: '}</strong>  {elem['Qualidade']} <br />\r\n                                    </ul>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                :\r\n                null\r\n\r\n            }</div>\r\n            {backHome ? <Redirect to=\"/menu\" /> : null}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default DropdownName;","import React, { useState, useEffect } from 'react';\r\nimport './CompleteSearch.css';\r\nimport functions from '../functions/functions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst CompleteSearch = () => {\r\n    const [complete, setComplete] = useState();\r\n    const [backHome, setBackHome] = useState(false);\r\n    const [recebi, setRecebi] = useState(false);\r\n\r\n    useEffect(() => {\r\n        functions.completeList(callback);\r\n    }, []);\r\n\r\n    const callback = (completedata) => {\r\n        setComplete(completedata);\r\n        setRecebi(true);\r\n    }\r\n\r\n    const back = () => {\r\n        setBackHome(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"centered\">\r\n            <div className=\"square\">\r\n\r\n                {recebi ?\r\n                    <div>\r\n\r\n                        {\r\n                            complete.map(function (elem) {\r\n                                return (\r\n                                    <div className=\"text-results\" key={elem['_id']}>\r\n\r\n                                        <ul>\r\n                                            <strong>{'Vinho ou Marca: '}</strong>  {elem['Vinho ou Marca']}  <br />\r\n                                            <strong>{'Produtor: '}</strong>  {elem['Produtor']} <br />\r\n                                            <strong>{'Qualidade: '}</strong>  {elem['Qualidade']} <br />\r\n                                        </ul>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n                    :\r\n                    <div id=\"inside-square\">Por favor aguarde...</div>\r\n                }\r\n\r\n            </div>\r\n\r\n            {recebi ?\r\n                <div className=\"square-diff\">\r\n                    <button type=\"button\"\r\n                        className=\"btn btn-light btn-lg btn-block\"\r\n                        onClick={back}\r\n                    > Voltar\r\n                </button>\r\n                </div>\r\n                :\r\n                null}\r\n\r\n\r\n            {backHome ? <Redirect to=\"/menu\" /> : null}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default CompleteSearch;","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport Menu from '../components/Menu';\r\nimport Init from '../components/Init';\r\nimport Dropdown from '../components/Dropdown';\r\nimport DropdownName from '../components/DropdownName';\r\nimport DropdownQuality from '../components/DropdownQuality';\r\nimport CompleteSearch from '../components/CompleteSearch';\r\n\r\nconst Routes = () => {\r\n\r\n    return (\r\n        <HashRouter basename='/' >\r\n            <Route exact path='/' component={Init} />\r\n            <Route path='/menu' component={Menu}/>\r\n            <Route path= '/produtor' component={Dropdown} /> \r\n            <Route path= '/nome' component={DropdownName} /> \r\n            <Route path= '/qualidade' component={DropdownQuality} /> \r\n            <Route path= '/todos-os-resultados' component={CompleteSearch} /> \r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\n//import Dropdown from './components/Dropdown';\nimport Routes from './routes/Route'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">  \n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm\">\n              <Routes/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}